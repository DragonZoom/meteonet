#+TITLE: Meteonet dataset and associated dataloader

* Objectives
  Write the most efficient dataloader for meteonet, both for
  classification, and regression.
  Then, adapt it to Vincent's code, then all my students codes.

  Compared to data prepared by Vincent, there is no PPMatrix nor
  train/val subdirectories.

* Structure of this repository (currently under developpement )

:  download-meteonet.sh   # script that downloads meteonet dataset (11 Gb)
:  meteonet/              # meteonet dataset, downloaded by previous script
:  download-meteonet-reduced.sh  # download a small meteonet dataset (1.8 Gb)
:  data/                  # meteonet dataset, downloaded by previous scripts
:  loader/                # torch dataloader functions
:     utilities.py        # utilities functions to filter and sorted meteonet files
:     loader.py           # contains MeteoetDataset class
:     samplers.py         # oversampling routines
:  models/                # U-net to test training
:  train.py               # training routine for unet, only rainmaps
:  train-wind.py          # training routine for unet, rainmaps and windmaps

* Setup
 
  - requirements: pytorch, matplotlib, numpy, tqdm
  - Usage:
    1. download one of the two databases
    2. run =train.py= or =train-wind.py=
       
* Roadmap
  - =loader/meteonet.py= DONE
  - =loader/samplers.py= DONE
  - training (only rainmaps) on small dataset: DONE
  - training (only rainmaps) on large dataset: DONE
  - training with windmaps: DONE
  - scores on test set and visualisation: under developpement
  - more metrics: TODO
  - trainer class: TODO
  - more models (U-net-reg, ED-DRAP, Small-At, ...): TODO
  - add README/COPYRIGHT in meteonet dataset archives: DONE
  - add radar_coord.npz, constants.py in meteonet dataset archives: DONE
  

